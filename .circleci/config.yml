version: 2
jobs:
  build:
    working_directory: /go/src/github.com/bcates277/invoicer-chapter2
    docker:
      - image: circleci/golang:1.10
    steps:
      - checkout
      - setup_remote_docker

      - run:
          name: Setup environment
          command: |
            gb="/src/github.com/${THE_CIRCLE_PROJECT_USERNAME}";
            if [ ${THE_CIRCLE_PROJECT_USERNAME} == 'Securing-DevOps' ]; then
              dr="securingdevops"
            else
              dr=$DOCKER_USER
            fi
            cat >> $BASH_ENV << EOF
            export GOPATH_HEAD="$(echo ${GOPATH} | cut -d ':' -f 1)"
            export GOPATH_BASE="${GOPATH_HEAD}${gb}"
            export DOCKER_REPO="$dr"
            export IMAGE_TAG="$DOCKER_REPO/${THE_CIRCLE_PROJECT_REPONAME}:latest"
            EOF

      - run: mkdir -p "${GOPATH_BASE}"
      - run: mkdir -p "${GOPATH_HEAD}/bin"

      - run:
          name: Testing application
          command: |
            go test github.com/${THE_CIRCLE_PROJECT_USERNAME}/${THE_CIRCLE_PROJECT_REPONAME}

      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
              go install --ldflags '-extldflags "-static"' \
                github.com/${THE_CIRCLE_PROJECT_USERNAME}/${THE_CIRCLE_PROJECT_REPONAME}
              mkdir bin
              cp "$GOPATH_HEAD/bin/${THE_CIRCLE_PROJECT_REPONAME}" bin/invoicer
              docker build -t ${IMAGE_TAG} .

              # Start your app container
              docker run -d -p 8080:8080 --name invoicer-container ${IMAGE_TAG}
              sleep 10 # Give the app time to start

              # Run ZAP Scan
              mkdir -p zap-reports
              docker pull ghcr.io/zaproxy/zaproxy:stable
              docker run --rm \
                --network host \
                -v $(pwd)/zap-reports:/zap/wrk \
                ghcr.io/zaproxy/zaproxy:stable \
                zap.sh -cmd -quickurl http://localhost:8080 \
                -quickout /zap/wrk/zap-report.html || true

              # Stop and clean up
              docker stop invoicer-container
              docker rm invoicer-container

              # Push image to Docker Hub
              docker push ${IMAGE_TAG}
            fi

      - store_artifacts:
          path: zap-reports/zap-report.html
          destination: zap-report
